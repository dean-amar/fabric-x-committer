# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
monitoring:
  server:
    endpoint: :2110
  latency:
    sampler:
      type: timer
      sampling-interval: 10s
    buckets:
      distribution: uniform
      max-latency: 5s
      bucket-count: 1000

orderer-client:
  sidecar-client-config:
    endpoint: sidecar:5050
  orderer:
    connection:
      endpoints:
        - broadcast,deliver,mock-ordering-service:4001
    consensus-type: BFT
    channel-id: channel
  broadcast-parallelism: 50

load-profile:
  key:
    size: 32
  block:
    size: 500
  transaction:
    read-write-count:
      const: 2
    policy:
      namespace-policies:
        0:
          scheme: ECDSA
          seed: 10
        _meta:
          scheme: ECDSA
          seed: 11
  conflicts:
    invalid-signatures: 0.1
  seed: 12345
  workers: 50

stream:
  rate-limit:
    endpoint: :6997
    initial-limit: 1000
  # We set low values for the buffer and batch to reduce the CPU load during tests.
  buffers-size: 1_000
  gen-batch: 1_000
generate:
  namespaces: true
  load: true

# The stopping condition for generating load according to the collected metrics.
# Zero value indicate no limit.
# The limit on the number of TXs is applied at block granularity. I.e., more TXs might be created than expected
# if a block overshot.
# The load generator stops when both requirements are met, i.e., one of them might overshoot.
# For the orderer adapter, the blocks limit is ignored for broadcasting as we don't track submitted blocks.
# For adapters that use concurrent submitters, we cannot enforce exact limits.
# The sidecar and coordinator adapters are sequential, so they don't have these issues.
limit:
  blocks: 10_000
  transactions: 0

logging:
  enabled: true
  development: false
  level: INFO
  name: loadgen
