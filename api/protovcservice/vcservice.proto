syntax = "proto3";

option go_package = "github.ibm.com/decentralized-trust-research/scalable-committer/api/protovcservice";

package protovcservice;

import "api/protoblocktx/block_tx.proto";

service ValidationAndCommitService {
  rpc StartValidateAndCommitStream (stream TransactionBatch) returns (stream protoblocktx.TransactionsStatus);
  rpc SetLastCommittedBlockNumber (protoblocktx.BlockInfo) returns (Empty) {};
  rpc GetLastCommittedBlockNumber (Empty) returns (protoblocktx.BlockInfo) {};
  rpc GetTransactionsStatus (protoblocktx.QueryStatus) returns (protoblocktx.TransactionsStatus) {};
  rpc GetNamespacePolicies(Empty) returns (protoblocktx.NamespacePolicies) {};
  rpc GetConfigTransaction(Empty) returns (protoblocktx.ConfigTransaction) {};
  rpc SetupSystemTablesAndNamespaces(Empty) returns (Empty) {};
}

message TransactionBatch {
  repeated Transaction transactions = 1;
}

message Transaction {
  string ID = 1;
  repeated protoblocktx.TxNamespace namespaces = 2;
  optional InvalidTxStatus prelim_invalid_tx_status = 3;
  uint64 block_number = 4;
  uint32 tx_num = 5;
}

message InvalidTxStatus {
    protoblocktx.Status code = 1;
}

message Empty {}

